parameters:
- name: variableGroupName
  displayName: Variable Group Name
  type: string
  default: ssscsample

trigger: none
pr: none

name: Secure Software Supply Chain for Linux workloads with Notation

variables:
- group: ${{ parameters.variableGroupName }}

jobs:

  - job: trips
    displayName: "Build & push Trips"
    variables:
      - name: APP_DIR
        value: ./src/trips
    steps:
      - bash: scripts/tooling/install_tooling.sh
        displayName: "Install Tooling (oras, sbom-tool, trivy, notation)"

      - task: AzureCLI@2
        displayName: "Build and push image"
        inputs:
          azureSubscription: $(AZURE_SERVICE_CONNECTION)
          scriptType: bash
          scriptLocation: inlineScript
          workingDirectory:  $(APP_DIR)
          inlineScript: |
            az acr login --name $ACR_NAME
            docker build -t $IMAGE_TAG .
            docker push $IMAGE_TAG
            IMAGE_PATH=$(docker image inspect --format='{{index .RepoDigests 0}}' $IMAGE_TAG)
            echo "##vso[task.setvariable variable=IMAGE_PATH;]$IMAGE_PATH"
        env:
          IMAGE_TAG:  $(ACR_LOGIN_SERVER)/trips:v1
          ACR_NAME: $(ACR_NAME)

      - task: AzureCLI@2
        displayName: "Sign image"
        inputs:
          azureSubscription:  $(AZURE_SERVICE_CONNECTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            notation sign --id $KEY_ID --plugin azure-kv --plugin-config "as_secret"=true --signature-format cose $ARTIFACT_TO_SIGN
        env:
          KEY_ID: $(SIGNING_KEY_ID)
          ARTIFACT_TO_SIGN:  $(IMAGE_PATH)

      - task: AzureCLI@2
        displayName: "Generate and attach SBOM to image"
        inputs:
          azureSubscription: $(AZURE_SERVICE_CONNECTION)
          scriptType: bash
          scriptLocation: inlineScript
          workingDirectory: $(APP_DIR)
          inlineScript: |
            docker pull $IMAGE_PATH
            
            sbom-tool generate \
              -BuildDropPath . \
              -BuildComponentPath . \
              -BuildListFile ../empty-file-list.txt \
              -DockerImagesToScan $IMAGE_PATH \
              -PackageSupplier Trips \
              -PackageName Trips \
              -PackageVersion 1.0 \
              -DeleteManifestDirIfPresent true \
              -FetchLicenseInformation true \
              -EnablePackageMetadataParsing true
              
            oras attach --distribution-spec v1.1-referrers-tag --artifact-type application/spdx+json $IMAGE_PATH ./_manifest/spdx_2.2/manifest.spdx.json:application/spdx+json
            SBOM_DIGEST=$(oras discover -o json --artifact-type application/spdx+json --distribution-spec v1.1-referrers-tag $IMAGE_PATH | jq -r ".manifests[0].digest")
            echo "##vso[task.setvariable variable=SBOM_DIGEST;]$SBOM_DIGEST"
        env:
          IMAGE_PATH: $(IMAGE_PATH)
      
      - task: AzureCLI@2
        displayName: "Sign SBOM"
        inputs:
          azureSubscription:  $(AZURE_SERVICE_CONNECTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            notation sign --id $KEY_ID --plugin azure-kv --plugin-config "as_secret"=true --signature-format cose $ARTIFACT_TO_SIGN
        env:
          KEY_ID: $(SIGNING_KEY_ID)
          ARTIFACT_TO_SIGN:  $(ACR_LOGIN_SERVER)/trips@$(SBOM_DIGEST)

      - bash: |
          current_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo "##vso[task.setvariable variable=VULN_DATE;]$current_date"
        displayName: "Set vuln. scan date"
        
      - task: AzureCLI@2
        displayName: "Scan for vulnerabilities and attach result"
        inputs:
          azureSubscription: $(AZURE_SERVICE_CONNECTION)
          workingDirectory: $(APP_DIR)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            trivy fs --format sarif --output trivy_scan_results.json .
            oras attach --distribution-spec v1.1-referrers-tag --annotation "org.opencontainers.image.created=$VULN_DATE" --artifact-type application/sarif+json $IMAGE_PATH trivy_scan_results.json:application/sarif+json
            TRIVY_DIGEST=$(oras discover -o json --artifact-type application/sarif+json --distribution-spec v1.1-referrers-tag $IMAGE_PATH | jq -r ".manifests[0].digest")
            echo "##vso[task.setvariable variable=TRIVY_DIGEST;]$TRIVY_DIGEST"
        env:
          IMAGE_PATH:  $(IMAGE_PATH)
          VULN_DATE: $(VULN_DATE)

      - task: AzureCLI@2
        displayName: "Sign vulnerability scan result"
        inputs:
          azureSubscription:  $(AZURE_SERVICE_CONNECTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            notation sign --id $KEY_ID --plugin azure-kv --plugin-config "as_secret"=true --signature-format cose $ARTIFACT_TO_SIGN
        env:
          KEY_ID: $(SIGNING_KEY_ID)
          ARTIFACT_TO_SIGN:  $(ACR_LOGIN_SERVER)/trips@$(TRIVY_DIGEST)

  - job: poi
    displayName: "Build & push POI"
    variables:
      - name: APP_DIR
        value: ./src/poi
    steps:
      - task: AzureCLI@2
        displayName: "Build and push image"
        inputs:
          azureSubscription: $(AZURE_SERVICE_CONNECTION)
          workingDirectory:  $(APP_DIR)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az acr login --name $ACR_NAME
            docker build -t $IMAGE_TAG .
            docker push $IMAGE_TAG
        env:
          ACR_NAME: $(ACR_NAME)
          IMAGE_TAG:  $(ACR_LOGIN_SERVER)/poi:v1

  - job: userprofile
    displayName: "Build & push UserProfile"
    variables:
      - name: APP_DIR
        value: ./src/userprofile

    steps:
      
      - bash: scripts/tooling/install_tooling.sh
        displayName: "Install Tooling (oras, sbom-tool, trivy, notation)"

      - task: AzureCLI@2
        displayName: "Build and push image"
        inputs:
          azureSubscription: $(AZURE_SERVICE_CONNECTION)
          workingDirectory:  $(APP_DIR)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az acr login --name $ACR_NAME
            docker build -t $IMAGE_TAG .
            docker push $IMAGE_TAG
            IMAGE_PATH=$(docker image inspect --format='{{index .RepoDigests 0}}' $IMAGE_TAG)
            echo "##vso[task.setvariable variable=IMAGE_PATH;]$IMAGE_PATH"
        env:
          IMAGE_TAG:  $(ACR_LOGIN_SERVER)/userprofile:v1
          ACR_NAME: $(ACR_NAME)

      - task: AzureCLI@2
        displayName: "Sign image"
        inputs:
          azureSubscription:  $(AZURE_SERVICE_CONNECTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            notation sign --id $KEY_ID --plugin azure-kv --plugin-config "as_secret"=true --signature-format cose $ARTIFACT_TO_SIGN
        env:
          KEY_ID: $(ALT_SIGNING_KEY_ID)
          ARTIFACT_TO_SIGN:  $(IMAGE_PATH)

      - task: AzureCLI@2
        displayName: "Generate and attach SBOM to image"
        inputs:
          azureSubscription: $(AZURE_SERVICE_CONNECTION)
          scriptType: bash
          scriptLocation: inlineScript
          workingDirectory: $(APP_DIR)
          inlineScript: |
            docker pull $IMAGE_PATH
            
            sbom-tool generate \
              -BuildDropPath . \
              -BuildComponentPath . \
              -BuildListFile ../empty-file-list.txt \
              -DockerImagesToScan $IMAGE_PATH \
              -PackageSupplier UserProfile \
              -PackageName UserProfile \
              -PackageVersion 1.0 \
              -DeleteManifestDirIfPresent true \
              -FetchLicenseInformation true \
              -EnablePackageMetadataParsing true
              
            oras attach --distribution-spec v1.1-referrers-tag --artifact-type application/spdx+json $IMAGE_PATH ./_manifest/spdx_2.2/manifest.spdx.json:application/spdx+json
            SBOM_DIGEST=$(oras discover -o json --artifact-type application/spdx+json --distribution-spec v1.1-referrers-tag $IMAGE_PATH | jq -r ".manifests[0].digest")
            echo "##vso[task.setvariable variable=SBOM_DIGEST;]$SBOM_DIGEST"
        env:
          IMAGE_PATH: $(IMAGE_PATH)
      
      - task: AzureCLI@2
        displayName: "Sign SBOM"
        inputs:
          azureSubscription:  $(AZURE_SERVICE_CONNECTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            notation sign --id $KEY_ID --plugin azure-kv --plugin-config "as_secret"=true --signature-format cose $ARTIFACT_TO_SIGN
        env:
          KEY_ID: $(ALT_SIGNING_KEY_ID)
          ARTIFACT_TO_SIGN:  $(ACR_LOGIN_SERVER)/userprofile@$(SBOM_DIGEST)

      - bash: |
          now=$(date -u)
          current_date=$(date --date="${now} -2 day" -u +'%Y-%m-%dT%H:%M:%SZ')
          echo "##vso[task.setvariable variable=VULN_DATE;]$current_date"
        displayName: "Set vuln. scan date"
        
      - task: AzureCLI@2
        displayName: "Scan for vulnerabilities and attach result"
        inputs:
          azureSubscription: $(AZURE_SERVICE_CONNECTION)
          workingDirectory: $(APP_DIR)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            trivy fs --format sarif --output trivy_scan_results.json .
            oras attach --distribution-spec v1.1-referrers-tag --annotation "org.opencontainers.image.created=$VULN_DATE" --artifact-type application/sarif+json $IMAGE_PATH trivy_scan_results.json:application/sarif+json
            TRIVY_DIGEST=$(oras discover -o json --artifact-type application/sarif+json --distribution-spec v1.1-referrers-tag $IMAGE_PATH | jq -r ".manifests[0].digest")
            echo "##vso[task.setvariable variable=TRIVY_DIGEST;]$TRIVY_DIGEST"
        env:
          IMAGE_PATH:  $(IMAGE_PATH)
          VULN_DATE: $(VULN_DATE)

      - task: AzureCLI@2
        displayName: "Sign vulnerability scan result"
        inputs:
          azureSubscription:  $(AZURE_SERVICE_CONNECTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            notation sign --id $KEY_ID --plugin azure-kv --plugin-config "as_secret"=true --signature-format cose $ARTIFACT_TO_SIGN
        env:
          KEY_ID: $(ALT_SIGNING_KEY_ID)
          ARTIFACT_TO_SIGN:  $(ACR_LOGIN_SERVER)/userprofile@$(TRIVY_DIGEST)