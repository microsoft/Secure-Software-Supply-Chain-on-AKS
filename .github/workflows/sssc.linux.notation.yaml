name: Secure Software Supply Chain for Linux workloads with Notation

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
    inputs:
      environment_name:
        description: "Environment name"
        required: true
        default: ssscsample
        type: string

env:
  ACR_NAME: ${{ vars.ACR_NAME }}
  ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
  SIGNING_KEY_ID: ${{ vars.SIGNING_KEY_ID }}
  ALT_SIGNING_KEY_ID: ${{ vars.ALT_SIGNING_KEY_ID }}
  ORAS_VERSION: 1.1.0
  NOTATION_VERSION: 1.1.0

jobs:
  trips:
    name: "Build & push Trips"
    environment:
      name: ${{ inputs.environment_name }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Login via Azure CLI"
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ENTRA_APP_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Install Notation CLI"
        uses: notaryproject/notation-action/setup@v1
        with:
          version: ${{ env.NOTATION_VERSION }}

      - name: "Install ORAS CLI"
        uses: oras-project/setup-oras@main
        with:
          version: ${{ env.ORAS_VERSION }}

      - name: "Install Microsoft SBOM Tool"
        run: ./scripts/tooling/install_sbom_tool.sh

      - name: "Login to ACR"
        id: acr
        run: |
          az acr login --name $ACR_NAME
          TOKEN=$(az acr login --expose-token -n $ACR_NAME --query accessToken -o tsv)
          echo "acr_token=$TOKEN" >> $GITHUB_OUTPUT

      - name: "Build and push image"
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.workspace }}/src/trips
          tags: ${{ env.ACR_LOGIN_SERVER }}/trips:v1
          push: true

      - name: "Set IMAGE_PATH environment variable"
        run: |
          echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_ENV
        env:
          IMAGE_PATH: ${{ env.ACR_LOGIN_SERVER }}/trips@${{ steps.push.outputs.digest }}

      - name: "Sign image"
        uses: notaryproject/notation-action/sign@v1
        with:
          plugin_name: azure-kv
          plugin_url: https://github.com/Azure/notation-azure-kv/releases/download/v1.0.2/notation-azure-kv_1.0.2_linux_amd64.tar.gz
          plugin_checksum: f2b2e131a435b6a9742c202237b9aceda81859e6d4bd6242c2568ba556cee20e
          key_id: ${{ env.SIGNING_KEY_ID }}
          target_artifact_reference: ${{ env.IMAGE_PATH }}
          signature_format: cose
          plugin_config: |-
            "as_secret"=true

      - name: "Generate and attach SBOM to image"
        id: sbom
        working-directory: ./src/trips
        run: |
          docker pull $IMAGE_PATH
          
          sbom-tool generate \
            -BuildDropPath . \
            -BuildComponentPath . \
            -BuildListFile ../empty-file-list.txt \
            -DockerImagesToScan $IMAGE_PATH \
            -PackageSupplier Trips \
            -PackageName Trips \
            -PackageVersion 1.0 \
            -DeleteManifestDirIfPresent true \
            -FetchLicenseInformation true \
            -EnablePackageMetadataParsing true

          oras attach  --distribution-spec v1.1-referrers-tag --artifact-type application/spdx+json $IMAGE_PATH ./_manifest/spdx_2.2/manifest.spdx.json:application/spdx+json
          SBOM_DIGEST=$(oras discover -o json --artifact-type application/spdx+json --distribution-spec v1.1-referrers-tag $IMAGE_PATH | jq -r ".manifests[0].digest")
          echo "digest=$SBOM_DIGEST" >> $GITHUB_OUTPUT
        env:
          IMAGE_PATH: ${{ env.IMAGE_PATH }}

      - name: "Sign SBOM"
        uses: notaryproject/notation-action/sign@v1
        with:
          plugin_name: azure-kv
          plugin_url: https://github.com/Azure/notation-azure-kv/releases/download/v1.0.2/notation-azure-kv_1.0.2_linux_amd64.tar.gz
          plugin_checksum: f2b2e131a435b6a9742c202237b9aceda81859e6d4bd6242c2568ba556cee20e
          key_id: ${{ env.SIGNING_KEY_ID }}
          target_artifact_reference: ${{ env.ACR_LOGIN_SERVER }}/trips@${{ steps.sbom.outputs.digest }}
          signature_format: cose
          plugin_config: |-
            "as_secret"=true

      - name: "Scan file system for vulnerabilities"
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: ./src/trips
          scanners: vuln
          format: "sarif"
          output: "fs-trivy.sarif"

      - name: "Scan image for vulnerabilities"
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.ACR_LOGIN_SERVER }}/trips:v1
          scanners: vuln
          format: "sarif"
          output: "img-trivy.sarif"
        env:
          TRIVY_USERNAME: "00000000-0000-0000-0000-000000000000"
          TRIVY_PASSWORD: ${{ steps.acr.outputs.acr_token }}

      - name: "Merge SARIF files"
        uses: microsoft/sarif-actions@v0.1
        with:
          command: "merge fs-trivy.sarif img-trivy.sarif --output-file=trivy_scan_results.json"

      - name: "Attach merged result to image"
        id: vulnscan
        run: |
          current_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          oras attach --distribution-spec v1.1-referrers-tag --annotation "org.opencontainers.image.created=$current_date" --artifact-type application/sarif+json $IMAGE_PATH trivy_scan_results.json:application/sarif+json
          TRIVY_DIGEST=$(oras discover -o json --artifact-type application/sarif+json --distribution-spec v1.1-referrers-tag $IMAGE_PATH | jq -r ".manifests[0].digest")
          echo "digest=$TRIVY_DIGEST" >> $GITHUB_OUTPUT
        env:
          IMAGE_PATH: ${{ env.IMAGE_PATH }}

      - name: "Sign vulnerability scan result"
        uses: notaryproject/notation-action/sign@v1
        with:
          plugin_name: azure-kv
          plugin_url: https://github.com/Azure/notation-azure-kv/releases/download/v1.0.2/notation-azure-kv_1.0.2_linux_amd64.tar.gz
          plugin_checksum: f2b2e131a435b6a9742c202237b9aceda81859e6d4bd6242c2568ba556cee20e
          key_id: ${{ env.SIGNING_KEY_ID }}
          target_artifact_reference: ${{ env.ACR_LOGIN_SERVER }}/trips@${{ steps.vulnscan.outputs.digest }}
          signature_format: cose
          plugin_config: |-
            "as_secret"=true

  poi:
    name: "Build & push POI"
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment_name }}
    defaults:
      run:
        shell: bash
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: "Login via Azure CLI"
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ENTRA_APP_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Login to ACR"
        run: az acr login --name $ACR_NAME
        env:
          ACR_NAME: ${{ env.ACR_NAME }}

      - name: "Build and push image"
        id: BuildAndPush
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.workspace }}/src/poi
          tags: ${{ env.ACR_LOGIN_SERVER }}/poi:v1
          push: true

  userprofile:
    name: "Build & push User Profile"
    environment:
      name: ${{ inputs.environment_name }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Login via Azure CLI"
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ENTRA_APP_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Install Notation CLI"
        uses: notaryproject/notation-action/setup@v1
        with:
          version: ${{ env.NOTATION_VERSION }}

      - name: "Install ORAS CLI"
        uses: oras-project/setup-oras@main
        with:
          version: ${{ env.ORAS_VERSION }}

      - name: "Install Microsoft SBOM Tool"
        run: ./scripts/tooling/install_sbom_tool.sh

      - name: "Login to ACR"
        id: acr
        run: |
          az acr login --name $ACR_NAME
          TOKEN=$(az acr login --expose-token -n $ACR_NAME --query accessToken -o tsv)
          echo "acr_token=$TOKEN" >> $GITHUB_OUTPUT

      - name: "Build and push image"
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.workspace }}/src/userprofile
          tags: ${{ env.ACR_LOGIN_SERVER }}/userprofile:v1
          push: true

      - name: "Set IMAGE_PATH environment variable"
        run: |
          echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_ENV
        env:
          IMAGE_PATH: ${{ env.ACR_LOGIN_SERVER }}/userprofile@${{ steps.push.outputs.digest }}

      - name: "Sign image"
        uses: notaryproject/notation-action/sign@v1
        with:
          plugin_name: azure-kv
          plugin_url: https://github.com/Azure/notation-azure-kv/releases/download/v1.0.2/notation-azure-kv_1.0.2_linux_amd64.tar.gz
          plugin_checksum: f2b2e131a435b6a9742c202237b9aceda81859e6d4bd6242c2568ba556cee20e
          key_id: ${{ env.ALT_SIGNING_KEY_ID }}
          target_artifact_reference: ${{ env.IMAGE_PATH }}
          signature_format: cose
          plugin_config: |-
            "as_secret"=true

      - name: "Generate and attach SBOM to image"
        id: sbom
        working-directory: ./src/userprofile
        run: |
          docker pull $IMAGE_PATH

          sbom-tool generate \
            -BuildDropPath . \
            -BuildComponentPath . \
            -BuildListFile ../empty-file-list.txt \
            -DockerImagesToScan $IMAGE_PATH \
            -PackageSupplier UserProfile \
            -PackageName UserProfile \
            -PackageVersion 1.0 \
            -DeleteManifestDirIfPresent true \
            -FetchLicenseInformation true \
            -EnablePackageMetadataParsing true

          oras attach  --distribution-spec v1.1-referrers-tag --artifact-type application/spdx+json $IMAGE_PATH ./_manifest/spdx_2.2/manifest.spdx.json:application/spdx+json
          SBOM_DIGEST=$(oras discover -o json --artifact-type application/spdx+json --distribution-spec v1.1-referrers-tag $IMAGE_PATH | jq -r ".manifests[0].digest")
          echo "digest=$SBOM_DIGEST" >> $GITHUB_OUTPUT
        env:
          IMAGE_PATH: ${{ env.IMAGE_PATH }}

      - name: "Sign SBOM"
        uses: notaryproject/notation-action/sign@v1
        with:
          plugin_name: azure-kv
          plugin_url: https://github.com/Azure/notation-azure-kv/releases/download/v1.0.2/notation-azure-kv_1.0.2_linux_amd64.tar.gz
          plugin_checksum: f2b2e131a435b6a9742c202237b9aceda81859e6d4bd6242c2568ba556cee20e
          key_id: ${{ env.ALT_SIGNING_KEY_ID }}
          target_artifact_reference: ${{ env.ACR_LOGIN_SERVER }}/userprofile@${{ steps.sbom.outputs.digest }}
          signature_format: cose
          plugin_config: |-
            "as_secret"=true

      - name: "Scan file system for vulnerabilities"
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: ./src/trips
          scanners: vuln
          format: "sarif"
          output: "fs-trivy.sarif"

      - name: "Scan image for vulnerabilities"
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.ACR_LOGIN_SERVER }}/userprofile:v1
          scanners: vuln
          format: "sarif"
          output: "img-trivy.sarif"
        env:
          TRIVY_USERNAME: "00000000-0000-0000-0000-000000000000"
          TRIVY_PASSWORD: ${{ steps.acr.outputs.acr_token }}

      - name: "Merge SARIF files"
        uses: microsoft/sarif-actions@v0.1
        with:
          command: "merge fs-trivy.sarif img-trivy.sarif --output-file=trivy_scan_results.json"

      - name: "Attach merged result to image"
        id: vulnscan
        run: |
          now=$(date -u)
          current_date=$(date --date="${now} -2 day" -u +'%Y-%m-%dT%H:%M:%SZ')
          oras attach --distribution-spec v1.1-referrers-tag --annotation "org.opencontainers.image.created=$current_date" --artifact-type application/sarif+json $IMAGE_PATH trivy_scan_results.json:application/sarif+json
          TRIVY_DIGEST=$(oras discover -o json --artifact-type application/sarif+json --distribution-spec v1.1-referrers-tag $IMAGE_PATH | jq -r ".manifests[0].digest")
          echo "digest=$TRIVY_DIGEST" >> $GITHUB_OUTPUT
        env:
          IMAGE_PATH: ${{ env.IMAGE_PATH }}

      - name: "Sign vulnerability scan result"
        uses: notaryproject/notation-action/sign@v1
        with:
          plugin_name: azure-kv
          plugin_url: https://github.com/Azure/notation-azure-kv/releases/download/v1.0.2/notation-azure-kv_1.0.2_linux_amd64.tar.gz
          plugin_checksum: f2b2e131a435b6a9742c202237b9aceda81859e6d4bd6242c2568ba556cee20e
          key_id: ${{ env.ALT_SIGNING_KEY_ID }}
          target_artifact_reference: ${{ env.ACR_LOGIN_SERVER }}/userprofile@${{ steps.vulnscan.outputs.digest }}
          signature_format: cose
          plugin_config: |-
            "as_secret"=true
